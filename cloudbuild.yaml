# Copyright 2018 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# [START cloudbuild]
steps:

# This step builds the container image.
- name: 'gcr.io/cloud-builders/docker'
  id: Build
  args:
  - 'build'
  - '--build-arg'
  - 'version=$SHORT_SHA'
  - '-t'
  - 'europe-west2-docker.pkg.dev/fleet-coyote-341511/nap-theme/facade:$SHORT_SHA'
  - '.'

#  timeout: 660s


#  This step pushes the image to Artifact Registry
# The PROJECT_ID and SHORT_SHA variables are automatically
# replaced by  Cloud Build.
- name: 'gcr.io/cloud-builders/docker'
  id: Push
  args:
  - 'push'
  - 'europe-west2-docker.pkg.dev/fleet-coyote-341511/nap-theme/facade:$SHORT_SHA'
# [END cloudbuild]

# Access the id_github file from Secret Manager, and setup SSH
#- name: 'gcr.io/cloud-builders/git'
#  secretEnv: ['SSH_KEY']
#  entrypoint: 'bash'
#  args:
#  - -c
#  - |
3    echo "$$SSH_KEY" >> /root/.ssh/id_rsa
#    chmod 400 /root/.ssh/id_rsa
#   cp known_hosts.github /root/.ssh/known_hosts
#  volumes:
#  - name: 'ssh'
#    path: /root/.ssh

# Clone the repository
#- name: 'gcr.io/cloud-builders/git'
#  args:
#  - clone
#  - --recurse-submodules
#  - git@github.com:paulmc-kits/dft-k8-test.git 
#  volumes:
#  - name: 'ssh'
#    path: /root/.ssh

## This step generates the new manifest
- name: 'gcr.io/cloud-builders/git'
  secretEnv: ['SSH_KEY']
  id: Generate manifest
  entrypoint: 'bash'
  args:
  - '-c'
  - |
    echo "$$SSH_KEY" >> /root/.ssh/id_rsa
    chmod 400 /root/.ssh/id_rsa
    cp known_hosts.github /root/.ssh/known_hosts
    git config --global user.name "cloudbuilder"
    git config --global user.email "cloudbuilder@gmail.com"
  #  cd dft-k8-test
  #  git push origin --delete candidate
  #  git checkout -b candidate
  #  sed "s/COMMIT_SHA/${SHORT_SHA}/g" manifests/facade/facade-deployment.yaml.tpl > manifests/facade/facade-deployment.yaml
  #  git add manifest/facade/facade-deployment.yaml
  #  git commit -m "europe-west2-docker.pkg.dev/fleet-coyote-341511/nap-theme/facade:${SHORT_SHA} Built from commit ${COMMIT_SHA} of repository  Author: $(git log --format='%an <%te>' -n 1 HEAD)"
  #  git push --set-upstream origin candidate
  volumes:
  - name: 'ssh'
    path: /root/.ssh

availableSecrets:
  secretManager:
  - versionName: projects/fleet-coyote-341511/secrets/SSH-KEY/versions/latest
    env: 'SSH_KEY'

